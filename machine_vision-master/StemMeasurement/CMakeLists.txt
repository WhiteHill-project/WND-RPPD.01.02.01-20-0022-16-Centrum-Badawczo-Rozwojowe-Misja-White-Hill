CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(gl3_tests)
IF(CMAKE_CXX_COMPILER MATCHES cl)
    ADD_DEFINITIONS(-D_CRT_NONSTDC_NO_WARNINGS)
    SET(CMAKE_CXX_FLAGS_DEBUG " /D \"_CRT_SECURE_NO_WARNINGS\" ${CMAKE_CXX_FLAGS_DEBUG}"  )
    SET(CMAKE_CXX_FLAGS_RELEASE " /D \"_CRT_SECURE_NO_WARNINGS\" ${CMAKE_CXX_FLAGS_RELEASE}")
ELSE()
    SET(CMAKE_CXX_FLAGS "-Wall -std=c++0x ${CMAKE_CXX_FLAGS}"  )
ENDIF()

FIND_PACKAGE(OpenGL)
FIND_PACKAGE(OpenCV REQUIRED)
FIND_PACKAGE(GLUT)
set(CMAKE_AUTOMOC TRUE)

FIND_PACKAGE(Qt4 COMPONENTS QtCore QtOpenGL)
include(${QT_USE_FILE})

#ADD_SUBDIRECTORY(rtNEAT)
#ADD_SUBDIRECTORY(Hypercube_NEAT)
SET(target_CPP
    main.cpp
    testcv.cpp
)
SET(target_INCLUDE
)

SET(target_INCLUDE_DIR

    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${CMAKE_CURRENT_BINARY_DIR}

)
SET(target_DEPENDS "")

INCLUDE_DIRECTORIES(
    ${EO_INCLUDE_DIR}
    ${target_INCLUDE_DIR}
    ${OPENGL_INCLUDE_DIR}
    /home/nemerle/dev/external/FANN/src/include
)
LINK_DIRECTORIES(/home/nemerle/dev/external/FANN/bld/src)
ADD_EXECUTABLE(gl3_test ${target_CPP})
TARGET_LINK_LIBRARIES(gl3_test
    GLEW
    ${target_DEPENDS}
    ${OPENGL_LIBRARIES}
    ${GLUT_LIBRARIES}
    ${OpenCV_LIBS}
    ${QT_LIBRARIES}
)
#ADD_EXECUTABLE(vlctest vlctest.cpp)
#TARGET_LINK_LIBRARIES(vlctest
#    GLEW
#    v4l2
#    rtneat
#    ${target_DEPENDS}
#    ${OPENGL_LIBRARIES}
#    ${GLUT_LIBRARIES}
#    ${OpenCV_LIBS}
#)
#ADD_EXECUTABLE(nn nn.cpp)
#TARGET_LINK_LIBRARIES(nn ${OpenCV_LIBS} fann)
